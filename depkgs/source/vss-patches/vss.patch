diff -ur vss/inc/win2003/vss.h vss-new/inc/win2003/vss.h
--- vss/inc/win2003/vss.h	2008-12-19 10:15:40.000000000 +0000
+++ vss-new/inc/win2003/vss.h	2015-10-15 09:20:43.804527352 +0000
@@ -14,9 +14,6 @@
 */
 //@@MIDL_FILE_HEADING(  )
 
-#pragma warning( disable: 4049 )  /* more than 64k source lines */
-
-
 /* verify that the <rpcndr.h> version is high enough to compile this file*/
 #ifndef __REQUIRED_RPCNDR_H_VERSION__
 #define __REQUIRED_RPCNDR_H_VERSION__ 475
@@ -63,7 +60,7 @@
 extern "C"{
 #endif 
 
-void * __RPC_USER MIDL_user_allocate(size_t);
+//void * __RPC_USER MIDL_user_allocate(size_t);
 void __RPC_USER MIDL_user_free( void * ); 
 
 /* interface __MIDL_itf_vss_0000 */
@@ -607,17 +604,17 @@
 /* interface __MIDL_itf_vss_0263 */
 /* [local] */ 
 
-#define	VSS_E_BAD_STATE	( 0x80042301L )
+//#define	VSS_E_BAD_STATE	( 0x80042301L )
 
 #define	VSS_E_PROVIDER_ALREADY_REGISTERED	( 0x80042303L )
 
-#define	VSS_E_PROVIDER_NOT_REGISTERED	( 0x80042304L )
+//#define	VSS_E_PROVIDER_NOT_REGISTERED	( 0x80042304L )
 
-#define	VSS_E_PROVIDER_VETO	( 0x80042306L )
+//#define	VSS_E_PROVIDER_VETO	( 0x80042306L )
 
 #define	VSS_E_PROVIDER_IN_USE	( 0x80042307L )
 
-#define	VSS_E_OBJECT_NOT_FOUND	( 0x80042308L )
+//#define	VSS_E_OBJECT_NOT_FOUND	( 0x80042308L )
 
 #define	VSS_S_ASYNC_PENDING	( 0x42309L )
 
@@ -625,19 +622,19 @@
 
 #define	VSS_S_ASYNC_CANCELLED	( 0x4230bL )
 
-#define	VSS_E_VOLUME_NOT_SUPPORTED	( 0x8004230cL )
+//#define	VSS_E_VOLUME_NOT_SUPPORTED	( 0x8004230cL )
 
-#define	VSS_E_VOLUME_NOT_SUPPORTED_BY_PROVIDER	( 0x8004230eL )
+//#define	VSS_E_VOLUME_NOT_SUPPORTED_BY_PROVIDER	( 0x8004230eL )
 
-#define	VSS_E_OBJECT_ALREADY_EXISTS	( 0x8004230dL )
+//#define	VSS_E_OBJECT_ALREADY_EXISTS	( 0x8004230dL )
 
-#define	VSS_E_UNEXPECTED_PROVIDER_ERROR	( 0x8004230fL )
+//#define	VSS_E_UNEXPECTED_PROVIDER_ERROR	( 0x8004230fL )
 
 #define	VSS_E_CORRUPT_XML_DOCUMENT	( 0x80042310L )
 
-#define	VSS_E_INVALID_XML_DOCUMENT	( 0x80042311L )
+//#define	VSS_E_INVALID_XML_DOCUMENT	( 0x80042311L )
 
-#define	VSS_E_MAXIMUM_NUMBER_OF_VOLUMES_REACHED	( 0x80042312L )
+//#define	VSS_E_MAXIMUM_NUMBER_OF_VOLUMES_REACHED	( 0x80042312L )
 
 #define	VSS_E_FLUSH_WRITES_TIMEOUT	( 0x80042313L )
 
@@ -647,7 +644,7 @@
 
 #define	VSS_E_SNAPSHOT_SET_IN_PROGRESS	( 0x80042316L )
 
-#define	VSS_E_MAXIMUM_NUMBER_OF_SNAPSHOTS_REACHED	( 0x80042317L )
+//#define	VSS_E_MAXIMUM_NUMBER_OF_SNAPSHOTS_REACHED	( 0x80042317L )
 
 #define	VSS_E_WRITER_INFRASTRUCTURE	( 0x80042318L )
 
diff -ur vss/inc/win2003/vswriter.h vss-new/inc/win2003/vswriter.h
--- vss/inc/win2003/vswriter.h	2008-12-19 10:15:40.000000000 +0000
+++ vss-new/inc/win2003/vswriter.h	2015-10-15 09:21:18.364527352 +0000
@@ -29,7 +29,7 @@
 #define __CVSS_WRITER_H_
 
 // declaration of how application data is used
-typedef enum VSS_USAGE_TYPE
+enum VSS_USAGE_TYPE
 	{
 	VSS_UT_UNDEFINED = 0,
 	VSS_UT_BOOTABLESYSTEMSTATE,	// formerly "system state"
@@ -38,7 +38,7 @@
 	VSS_UT_OTHER				// unclassified
 	};
 
-typedef enum VSS_SOURCE_TYPE
+enum VSS_SOURCE_TYPE
 	{
 	VSS_ST_UNDEFINED = 0,
 	VSS_ST_TRANSACTEDDB,			// transacted db (e.g., SQL Server, JET Blue)
@@ -46,7 +46,7 @@
 	VSS_ST_OTHER					// unclassified
 	};
 
-typedef enum VSS_RESTOREMETHOD_ENUM
+enum VSS_RESTOREMETHOD_ENUM
 	{
 	VSS_RME_UNDEFINED = 0,
 	VSS_RME_RESTORE_IF_NOT_THERE,
@@ -58,7 +58,7 @@
 	VSS_RME_CUSTOM
 	};
 
-typedef enum VSS_WRITERRESTORE_ENUM
+enum VSS_WRITERRESTORE_ENUM
 	{
 	VSS_WRE_UNDEFINED = 0,
 	VSS_WRE_NEVER,
@@ -67,14 +67,14 @@
 	};
 
 
-typedef enum VSS_COMPONENT_TYPE
+enum VSS_COMPONENT_TYPE
 	{
 	VSS_CT_UNDEFINED = 0,
 	VSS_CT_DATABASE,
 	VSS_CT_FILEGROUP
 	};
 
-typedef enum VSS_ALTERNATE_WRITER_STATE
+enum VSS_ALTERNATE_WRITER_STATE
     {
     VSS_AWS_UNDEFINED = 0,
     VSS_AWS_NO_ALTERNATE_WRITER,
@@ -83,7 +83,7 @@
     };
 
 // Flags to specify which types of events to receive.  Used in Subscribe.
-typedef enum VSS_SUBSCRIBE_MASK
+enum VSS_SUBSCRIBE_MASK
     {
 	VSS_SM_POST_SNAPSHOT_FLAG	 = 0x00000001,	
 	VSS_SM_BACKUP_EVENTS_FLAG 	= 0x00000002,	
@@ -93,7 +93,7 @@
     };
 
 // enumeration of restore targets
-typedef enum VSS_RESTORE_TARGET
+enum VSS_RESTORE_TARGET
 	{
 	VSS_RT_UNDEFINED = 0,
 	VSS_RT_ORIGINAL,        
@@ -103,7 +103,7 @@
 	};
 
 // enumeration of file restore status codes
-typedef enum VSS_FILE_RESTORE_STATUS
+enum VSS_FILE_RESTORE_STATUS
 	{
 	VSS_RS_UNDEFINED = 0,
 	VSS_RS_NONE,
@@ -112,7 +112,7 @@
 	};
 
 
-typedef enum VSS_COMPONENT_FLAGS
+enum VSS_COMPONENT_FLAGS
 	{
 	VSS_CF_BACKUP_RECOVERY                  = 0x00000001,
 	VSS_CF_APP_ROLLBACK_RECOVERY       = 0x00000002
diff -ur vss/inc/winxp/vss.h vss-new/inc/winxp/vss.h
--- vss/inc/winxp/vss.h	2008-12-19 10:15:40.000000000 +0000
+++ vss-new/inc/winxp/vss.h	2015-10-15 09:20:22.188527352 +0000
@@ -1,9 +1,3 @@
-
-#pragma warning( disable: 4049 )  /* more than 64k source lines */
-#pragma warning( disable: 4100 ) /* unreferenced arguments in x86 call */
-#pragma warning( disable: 4211 )  /* redefine extent to static */
-#pragma warning( disable: 4232 )  /* dllimport identity*/
-
 /* this ALWAYS GENERATED file contains the definitions for the interfaces */
 
 
@@ -65,7 +59,7 @@
 extern "C"{
 #endif 
 
-void * __RPC_USER MIDL_user_allocate(size_t);
+//void * __RPC_USER MIDL_user_allocate(size_t);
 void __RPC_USER MIDL_user_free( void * ); 
 
 /* interface __MIDL_itf_vss_0000 */
@@ -559,17 +553,17 @@
 /* interface __MIDL_itf_vss_0254 */
 /* [local] */ 
 
-#define	VSS_E_BAD_STATE	( 0x80042301L )
+//#define	VSS_E_BAD_STATE	( 0x80042301L )
 
 #define	VSS_E_PROVIDER_ALREADY_REGISTERED	( 0x80042303L )
 
-#define	VSS_E_PROVIDER_NOT_REGISTERED	( 0x80042304L )
+//#define	VSS_E_PROVIDER_NOT_REGISTERED	( 0x80042304L )
 
-#define	VSS_E_PROVIDER_VETO	( 0x80042306L )
+//#define	VSS_E_PROVIDER_VETO	( 0x80042306L )
 
 #define	VSS_E_PROVIDER_IN_USE	( 0x80042307L )
 
-#define	VSS_E_OBJECT_NOT_FOUND	( 0x80042308L )
+//#define	VSS_E_OBJECT_NOT_FOUND	( 0x80042308L )
 
 #define	VSS_S_ASYNC_PENDING	( 0x42309L )
 
@@ -577,19 +571,19 @@
 
 #define	VSS_S_ASYNC_CANCELLED	( 0x4230bL )
 
-#define	VSS_E_VOLUME_NOT_SUPPORTED	( 0x8004230cL )
+//#define	VSS_E_VOLUME_NOT_SUPPORTED	( 0x8004230cL )
 
-#define	VSS_E_VOLUME_NOT_SUPPORTED_BY_PROVIDER	( 0x8004230eL )
+//#define	VSS_E_VOLUME_NOT_SUPPORTED_BY_PROVIDER	( 0x8004230eL )
 
-#define	VSS_E_OBJECT_ALREADY_EXISTS	( 0x8004230dL )
+//#define	VSS_E_OBJECT_ALREADY_EXISTS	( 0x8004230dL )
 
-#define	VSS_E_UNEXPECTED_PROVIDER_ERROR	( 0x8004230fL )
+//#define	VSS_E_UNEXPECTED_PROVIDER_ERROR	( 0x8004230fL )
 
 #define	VSS_E_CORRUPT_XML_DOCUMENT	( 0x80042310L )
 
-#define	VSS_E_INVALID_XML_DOCUMENT	( 0x80042311L )
+//#define	VSS_E_INVALID_XML_DOCUMENT	( 0x80042311L )
 
-#define	VSS_E_MAXIMUM_NUMBER_OF_VOLUMES_REACHED	( 0x80042312L )
+//#define	VSS_E_MAXIMUM_NUMBER_OF_VOLUMES_REACHED	( 0x80042312L )
 
 #define	VSS_E_FLUSH_WRITES_TIMEOUT	( 0x80042313L )
 
@@ -599,7 +593,7 @@
 
 #define	VSS_E_SNAPSHOT_SET_IN_PROGRESS	( 0x80042316L )
 
-#define	VSS_E_MAXIMUM_NUMBER_OF_SNAPSHOTS_REACHED	( 0x80042317L )
+//#define	VSS_E_MAXIMUM_NUMBER_OF_SNAPSHOTS_REACHED	( 0x80042317L )
 
 #define	VSS_E_WRITER_INFRASTRUCTURE	( 0x80042318L )
 
diff -ur vss/inc/winxp/vswriter.h vss-new/inc/winxp/vswriter.h
--- vss/inc/winxp/vswriter.h	2008-12-19 10:15:40.000000000 +0000
+++ vss-new/inc/winxp/vswriter.h	2015-10-15 09:19:50.892527352 +0000
@@ -29,7 +29,7 @@
 #define __CVSS_WRITER_H_
 
 // declaration of how application data is used
-typedef enum VSS_USAGE_TYPE
+enum VSS_USAGE_TYPE
 	{
 	VSS_UT_UNDEFINED = 0,
 	VSS_UT_BOOTABLESYSTEMSTATE,	// formerly "system state"
@@ -38,7 +38,7 @@
 	VSS_UT_OTHER				// unclassified
 	};
 
-typedef enum VSS_SOURCE_TYPE
+enum VSS_SOURCE_TYPE
 	{
 	VSS_ST_UNDEFINED = 0,
 	VSS_ST_TRANSACTEDDB,			// transacted db (e.g., SQL Server, JET Blue)
@@ -46,7 +46,7 @@
 	VSS_ST_OTHER					// unclassified
 	};
 
-typedef enum VSS_RESTOREMETHOD_ENUM
+enum VSS_RESTOREMETHOD_ENUM
 	{
 	VSS_RME_UNDEFINED = 0,
 	VSS_RME_RESTORE_IF_NOT_THERE,
@@ -57,7 +57,7 @@
 	VSS_RME_CUSTOM
 	};
 
-typedef enum VSS_WRITERRESTORE_ENUM
+enum VSS_WRITERRESTORE_ENUM
 	{
 	VSS_WRE_UNDEFINED = 0,
 	VSS_WRE_NEVER,
@@ -66,14 +66,14 @@
 	};
 
 
-typedef enum VSS_COMPONENT_TYPE
+enum VSS_COMPONENT_TYPE
 	{
 	VSS_CT_UNDEFINED = 0,
 	VSS_CT_DATABASE,
 	VSS_CT_FILEGROUP
 	};
 
-typedef enum VSS_ALTERNATE_WRITER_STATE
+enum VSS_ALTERNATE_WRITER_STATE
     {
     VSS_AWS_UNDEFINED = 0,
     VSS_AWS_NO_ALTERNATE_WRITER,
@@ -82,7 +82,7 @@
     };
 
 // Flags to specify which types of events to receive.  Used in Subscribe.
-typedef enum VSS_SUBSCRIBE_MASK
+enum VSS_SUBSCRIBE_MASK
     {
 	VSS_SM_POST_SNAPSHOT_FLAG	 = 0x00000001,	
 	VSS_SM_BACKUP_EVENTS_FLAG 	= 0x00000002,	
@@ -92,7 +92,7 @@
     };
 
 // enumeration of restore targets
-typedef enum VSS_RESTORE_TARGET
+enum VSS_RESTORE_TARGET
 	{
 	VSS_RT_UNDEFINED = 0,
 	VSS_RT_ORIGINAL,
@@ -102,7 +102,7 @@
 	};
 
 // enumeration of file restore status codes
-typedef enum VSS_FILE_RESTORE_STATUS
+enum VSS_FILE_RESTORE_STATUS
 	{
 	VSS_RS_UNDEFINED = 0,
 	VSS_RS_NONE,
